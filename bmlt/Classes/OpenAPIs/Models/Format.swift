//
// Format.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Format: Codable, JSONEncodable, Hashable {

    public var worldId: String
    public var type: String
    public var translations: [FormatTranslation]
    public var id: Int

    public init(worldId: String, type: String, translations: [FormatTranslation], id: Int) {
        self.worldId = worldId
        self.type = type
        self.translations = translations
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case worldId
        case type
        case translations
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(worldId, forKey: .worldId)
        try container.encode(type, forKey: .type)
        try container.encode(translations, forKey: .translations)
        try container.encode(id, forKey: .id)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Format: Identifiable {}
