//
// RootServer.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RootServer: Codable, JSONEncodable, Hashable {

    public var sourceId: Int
    public var name: String
    public var url: String
    public var statistics: RootServerBaseStatistics?
    public var serverInfo: String?
    public var lastSuccessfulImport: Date
    public var id: Int

    public init(sourceId: Int, name: String, url: String, statistics: RootServerBaseStatistics? = nil, serverInfo: String? = nil, lastSuccessfulImport: Date, id: Int) {
        self.sourceId = sourceId
        self.name = name
        self.url = url
        self.statistics = statistics
        self.serverInfo = serverInfo
        self.lastSuccessfulImport = lastSuccessfulImport
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sourceId
        case name
        case url
        case statistics
        case serverInfo
        case lastSuccessfulImport
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sourceId, forKey: .sourceId)
        try container.encode(name, forKey: .name)
        try container.encode(url, forKey: .url)
        try container.encodeIfPresent(statistics, forKey: .statistics)
        try container.encodeIfPresent(serverInfo, forKey: .serverInfo)
        try container.encode(lastSuccessfulImport, forKey: .lastSuccessfulImport)
        try container.encode(id, forKey: .id)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension RootServer: Identifiable {}
